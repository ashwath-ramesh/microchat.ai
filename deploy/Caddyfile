microchat.ai {
	# Enable compression (gzip, zstd, brotli)
	encode gzip zstd br
	
	# Rate limiting matching .env.example (10 RPS, burst 20)
	rate_limit {
		zone dynamic {
			key {remote_host}
			events 10
			window 1s
			burst 20
		}
	}
	
	# Security headers
	header {
		X-Frame-Options "DENY"
		X-Content-Type-Options "nosniff"
		X-XSS-Protection "1; mode=block"
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		Content-Security-Policy "default-src 'none'; frame-ancestors 'none'"
		Referrer-Policy "no-referrer"
		Permissions-Policy "geolocation=(), microphone=(), camera=()"
		-Server
	}
	
	# Request size limit (1MB for compressed gRPC)
	request_body {
		max_size 1MB
	}
	
	@grpc {
		header Content-Type application/grpc*
	}

	handle @grpc {
		reverse_proxy https://localhost:4000 {
			transport http {
				tls_trusted_ca_certs /opt/microchat/certs/ca.crt
				versions 1.2 1.3
			}
			# Health check
			health_uri /chat.ChatService/Health
			health_interval 30s
			health_timeout 5s
		}
	}

	handle {
		respond "Not Found" 404
	}
	
	# Access logging for security monitoring
	log {
		output file /var/log/caddy/access.log {
			roll_size 100mb
			roll_keep 10
		}
		format json
	}
}