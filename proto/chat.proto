syntax = "proto3";

package chat;
option go_package = "./proto";

service ChatService {
    rpc Chat(ChatRequest) returns (ChatResponse);
    rpc Health(HealthRequest) returns (HealthResponse);
    rpc GetHistory(GetHistoryRequest) returns (GetHistoryResponse);
}

message ChatRequest {
  uint32 session_id   = 1;  // Ultra-low bandwidth: small values encode as ~2 bytes
  Model model         = 2;  // enum, defaults to 0
  string message      = 3;  // your actual chat message
}

message ChatResponse {
  uint32 session_id   = 1;  // Ultra-low bandwidth: small values encode as ~2 bytes
  string reply        = 2;
}

message HealthRequest {}

message HealthResponse {
  bool ok = 1;  // Just true/false, defaults to false (0 bytes when true)
}

message GetHistoryRequest {
  uint32 session_id = 1;  // Session to get history for
}

message GetHistoryResponse {
  uint32 session_id = 1;  // Session ID
  repeated string messages = 2;  // All messages in session
}

enum Model {
  GPT_4           = 0;      // default = 0 bytes in payload
  GPT_3_5         = 1;
  CLAUDE_4        = 2;
  GEMINI_2_5_PRO  = 3;
}

